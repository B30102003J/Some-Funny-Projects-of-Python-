# Problem 1

# You have an N-element tuple or sequence that you would like to unpack into a collection of N variables.

# Sol:- Any sequence (or iterable) can be unpacked into variable using a single assignment operation. The only 
#       requirement is that the number of varible and structure match the sequence. For Ex:-


p = (4,5)
x,y = p

print(x)
print(y)

data = ['ACME', 50, 91.1, (2012, 12, 21)]

name, shares, price, date = data
print(name)
print(shares)
print(price)
print(date)

name, shares, price, (year, month, day) = data

print(name)
print(year)
print(month)
print(day)

# If there is a mismatch in the number of elements, you'll get an error. For ex:-
p = (4, 5)
x, y, z = p
# after run this code you get error in line 29

"""
# Discussion
#  Discussion: Unpacking actually works with any object that happens to be iterable, not just tuples or lists. This
#             includes strings, files, iterators, and generators. For ex:

s = 'hello'
a, b, c, d, e = s
print(a)
print(b)
print(c)
print(d)
print(e)

# When unpacking, you may somethings want to be discard certain values. Python has no special syntax for this, but
#   you can often just pick a throwaway varible name for it. For ex:

data = ['ACME', 50, 91.1, (2012, 12, 21)]
_, shares, price, _ = data

print(shares)
print(price)

# However, make sure that the varible name you pick isn't being used for something else already.
"""
